---
import { type TMetaInformation } from "@lib/types";
import { SITE_TITLE } from "@scripts/data/constants";
import { signInEmailAddress } from "@scripts/data/demoHelperData";

import LayoutAccountAuthentication from "@layouts/LayoutAccountAuthentication.astro";
import InputGroup from "@components/InputGroup/InputGroup.astro";
import Icon from "@components/Icon/Icon.astro";
import BasicPopover from "@components/BasicPopover/BasicPopover.astro";
import DemoHelper from "@components/DemoHelper/DemoHelper.astro";

import {
  IconDataMeta,
  IconDataGoogle,
} from "@scripts/icons/fontawesome/brands.mjs";

const meta: TMetaInformation = {
  lang: "en",
  title: `Sign in`,
  description: ``,
  ogImage: ``,
};
---

<LayoutAccountAuthentication meta={meta}>
  {/* ---- Form ---- */}
  <form action="/sign-in/form-submit" method="POST">
    <InputGroup
      attributes={{ class: `mb-8` }}
      label={{ text: "Email address" }}
      input={{
        attributes: {
          name: "email",
          id: "email",
          type: "email",
          inputtype: "email",
          required: "",
          autofocus: "",
        },
        appearance: "white",
      }}
    />
    <div>
      <button
        type="submit"
        class="flex w-full justify-center rounded-md bg-primary-600 px-3 py-1.5 text-sm font-semibold leading-6 text-white shadow-sm transition hover:bg-primary-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-primary-600"
      >
        Continue
      </button>
    </div>
  </form>

  {/* ---- Divider ---- */}
  <div class="relative mt-6">
    <div class="absolute inset-0 flex items-center" aria-hidden="true">
      <div class="w-full border-t border-stone-200"></div>
    </div>
    <div class="font-regular relative flex justify-center text-sm leading-6">
      <span class="bg-white px-6 text-stone-500">Or sign in with</span>
    </div>
  </div>

  {/* ---- Social buttons ---- */}
  <div class="mt-6 grid grid-cols-2 gap-4">
    <a
      href="#"
      class="flex w-full items-center justify-center gap-3 rounded bg-white px-2 py-1 text-sm font-semibold text-stone-500 shadow-sm ring-1 ring-inset ring-stone-300 transition hover:bg-stone-50 hover:text-stone-700 focus-visible:outline focus-visible:-outline-offset-1"
    >
      <Icon data={IconDataGoogle} attributes={{ class: `h-4 w-4` }} />
      <span class="text-sm font-semibold leading-6">Google</span>
    </a>
    <a
      href="#"
      class="flex w-full items-center justify-center gap-3 rounded bg-white px-2 py-1 text-sm font-semibold text-stone-500 shadow-sm ring-1 ring-inset ring-stone-300 transition hover:bg-stone-50 hover:text-stone-700 focus-visible:outline focus-visible:-outline-offset-1"
    >
      <Icon data={IconDataMeta} attributes={{ class: `h-5 w-5` }} />
      <span class="text-sm font-semibold leading-6">Meta</span>
    </a>
  </div>

  {/* ---- Demo only ---- */}
  <DemoHelper popover={signInEmailAddress} />

  {/* //////// Heading //////// */}
  <span slot="heading">Sign in to {SITE_TITLE}</span>

  {/* //////// Footer //////// */}
  <div slot="footer">
    <span class="text-stone-500">New here? &#32;</span>
    <BasicPopover position="top">
      <span
        slot="button"
        class="text-sm font-medium leading-snug text-primary-600 underline decoration-transparent underline-offset-2 transition hover:text-primary-500 hover:decoration-primary-500/25 group-focus-visible:rounded-sm group-focus-visible:outline group-focus-visible:outline-offset-2"
      >
        Account registration
      </span>

      <div slot="panel" class="text-left text-sm">
        To get started with {SITE_TITLE}, enter your email address above and
        click 'Continue'.
      </div>
    </BasicPopover>
  </div>
</LayoutAccountAuthentication>

<script>
  // Store email address in session storage.
  // Needed for forgot password flow and also used for demo prototype.
  const emailInput = document.getElementById("email") as HTMLInputElement;

  if (emailInput) {
    emailInput.addEventListener("input", function () {
      sessionStorage.setItem("accountEmail", emailInput.value.trim());
    });
  }
</script>
